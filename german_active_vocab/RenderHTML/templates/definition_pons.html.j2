<html>
<head>
    <!-- meta name="qrichtext" content="1" /-->
    <!-- <link rel="stylesheet" href="src/templates/styles.css"> -->
    <style>
        /* margin-left: 20px; */
        /* text-indent: 20px; */
        /* page-break-before: always; */
        /* white-space:pre; */
        /* display: inline-block; */
        /* h2:before {
            content: '\Aâ€¢ ';
        } */
                    /* -qt-block-indent: 1; */


        :root{
            /* here only for visualisation, doesn't work for pyqt, using jinja instead for filling color vars  */
            /* Main Primary color */
            var-color-primary-0: #DCFABC;
            var-color-primary-1: #F2FEE5;
            var-color-primary-2: #E7FCD1;
            var-color-primary-3: #D1F7A7;
            var-color-primary-4: #C5F393;
            /* Main Secondary color (1) */
            var-color-secondary-1-0: #B4EFCF;
            var-color-secondary-1-1: #E3FCEE;
            var-color-secondary-1-2: #CCF6E0;
            var-color-secondary-1-3: #9CE6BE;
            var-color-secondary-1-4: #84DAAC;
            /* Main Secondary color (2) */
            var-color-secondary-2-0: #F6FEBF;
            var-color-secondary-2-1: #FBFFE5;
            var-color-secondary-2-2: #F9FED3;
            var-color-secondary-2-3: #F2FDAC;
            var-color-secondary-2-4: #EFFC98;
        }
        
        body {
            font-family: 'Arial';
            font-size: 12pt;
            font-weight: 400;
            font-style: normal;
        }

        .headword {
            font-family: 'Arial Black';
            font-size: xx-large;
            color: {{col_pal["primary_0"]}};
        }
        
        .wordclass {
            font-size: x-large;
        }

        .flexion {
            font-size: large;
            font-weight: 600;
            color: {{col_pal["primary_1"]}};
        }

        .genus{
            font-size: x-large;
            font-weight: 600; 
            
        }

        .word_freq{
            font-size: large;
            font-weight: 500;
            color: {{col_pal["primary_0"]}};
        }

        h2 {
            page-break-before: always;
            text-indent: 20px;
            /* -qt-block-indent: 1; */
        }

        .verbclass {
            font-size: x-large;
            color: {{col_pal["primary_2"]}};
        }


        .grammatical_construction, .idiom_proverb, .full_collocation{
            /* color: {{col_pal["primary_1"]}}; */
        }

        /* acronym{
            text-decoration-line: underline ;
            text-decoration-style: dotted;
        } */

        .info, .auxiliary_verb, .feminine, .object-case{
            color: {{col_pal["primary_2"]}};
        }

        
        .definition, .sense, .Wendungen_Redensarten_Sprichwoerter {
            font-weight: bold;
        }

        .reference_qualification{
            font-weight: bold;
        }

        .synonym{
            font-weight: bold;
        }

        .opposition{
            font-weight: bold;
        }

        .example {
            font-style: italic;
            /* -qt-block-indent: 2; */
        }

        

        .restriction, .style, .rhetoric, .topic, .region, .etymology, .age{
            color: {{col_pal["secondary_1_0"]}};
        }

        /* .style{
            color: #cfff70;
        }

        .rhetoric{
            color: #cfff70;
        } */

        .seen_info{
            font-size: medium;
            font-family: "Courier New";
        }

    </style>
</head>
<body>
    {% set ns = namespace() %}
    {% set ns.is_first_big_section = true %}
    {% for big_section in dict_content %}
        {% if not ns.is_first_big_section %}
        <hr>
        {% endif %}
        {% if mode == "full" %}
        <h1>
        {% set ns.previous_h1_key="" %}
        {% set ns.previous_h1_value="" %}
        {% for h1_key,h1_value in big_section.items() %}
            {% if h1_key not in ('word_subclass', 'hidden_words_list', 'secondary_words_to_hide') %}
                <span class={{h1_key}}>{{h1_value|treat_class(h1_key, ns.previous_h1_key, ns.previous_h1_value)}} </span>
            {% endif %}
            {% set ns.previous_h1_key = h1_key %}
            {% set ns.previous_h1_value = h1_value %}
        {% endfor %}
        {% if ns.is_first_big_section %}
            <span class="word_freq">{{word_dict["word_freq"]|treat_class("word_freq", ns.previous_h1_key, ns.previous_h1_value)}} </span>
        {% endif %}
        {% set ns.is_first_big_section = false %}
        </h1>
        {% endif %}
        {% for small_section in big_section["word_subclass"] %}
            <h2>
            {% set ns.previous_h2_key="" %}
            {% set ns.previous_h2_value="" %}
            {% for h2_key,h2_value in small_section.items() %}
                {% if h2_key != 'def_blocks' %}
                    <span class={{h2_key}}>{{h2_value|treat_class(h2_key, ns.previous_h2_key, ns.previous_h2_value)|treat_hidden_words(h2_key, big_section['hidden_words_list'], big_section['secondary_words_to_hide'], word_dict['forced_hidden_words'])}} </span>
                {% endif %}
                {% set ns.previous_h2_key = h2_key %}
                {% set ns.previous_h2_value = h2_value %}
            {% endfor %}
            </h2>
            {% for def_block in small_section["def_blocks"] %}
                <p>
                {% set ns.previous_h3_key="" %}
                {% set ns.previous_h3_value="" %}
                {% for h3_key,h3_value in def_block.items() %}
                    {% if h3_value|is_list %}
                        {% for h4_value in h3_value %}
                            <span class={{h3_key}}>{{h4_value|treat_class(h3_key, ns.previous_h3_key, ns.previous_h3_value)|treat_hidden_words(h3_key, big_section['hidden_words_list'], big_section['secondary_words_to_hide'], word_dict['forced_hidden_words'])}} </span>
                            {% set ns.previous_h3_key = h3_key %}
                        {% endfor %}
                    {% else %}
                        <span class={{h3_key}}>{{h3_value|treat_class(h3_key, ns.previous_h3_key, ns.previous_h3_value)|treat_hidden_words(h3_key, big_section['hidden_words_list'], big_section['secondary_words_to_hide'], word_dict['forced_hidden_words'])}} </span>
                        {% set ns.previous_h3_key = h3_key %}
                    {% endif %}
                    {% set ns.previous_h3_value = h3_value %}
                {% endfor %}
                </p>
            {% endfor %}
        {% endfor %} 
    {% endfor %}
    {# Adding Synonymes #}
    {% if word_dict["synonymes"]|length %}
        <hr>
        <p>
        <font size="5" color="#FFD300">Synonyme</font>
        <br>
        {% for item in word_dict["synonymes"] %}
        <br>
            <span>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;{{item|join(', ')}}</span>
        {% endfor %}
        </p>
    {% else %}
       <hr>
        <p><font size="3" color="#FFD300">Synonyme zu {{word_info["word"]}} in duden nicht gefunden</font></p>
    {% endif %}
    {# Adding custom examples section #}
    <!-- hr border-top='1px dotted' -->
    <!-- hr border-top="1px dashed" width="120%  experimenti chouf enehi li talsa7-->
    {% if word_dict["custom_examples"]["german"]|length %}
        <hr>
        <p class='custom_examples'>
            <b>Eigenes Beispiel:</b>
            <br>
            {% for beispiel_de in word_dict["custom_examples"]["german"] %}
                <i>&nbsp;&nbsp;&nbsp;&nbsp;{{beispiel_de|treat_hidden_words('custom_examples', all_words_to_hide, all_secondary_words, [])}}</i>
                <br>
            {% endfor %}
            {% if word_dict["custom_examples"]["english"]|length %}
            <b>Auf Englisch:</b><br>
            {% for beispiel_en in word_dict["custom_examples"]["english"] %}
                <i>&nbsp;&nbsp;&nbsp;&nbsp;{{beispiel_en}}</i>
                <br>
            {% endfor %}
            {% endif %}
        </p>
    {% endif %}
    {# Adding Word seen datetime infos #}
    {% if "Previous_date" in word_info %}
        <hr>
        <p class="seen_info">Last seen on {{word_info["Previous_date"]}}, next revision on {{word_info["Next_date"]}} </font>
    {% endif %}
</body>
</html>